name: DependenciesandTests

env:
  FLASK_CONFIGURATION: ${{ secrets.FLASK_CONFIGURATION }}
  FLASK_ENV: ${{ secrets.FLASK_ENV }}
  TEST_DATABASE_URI: ${{ secrets.TEST_DATABASE_URI }}
  DATABASE_URI: ${{ secrets.DATABASE_URI }}
  FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
  SQLALCHEMY_DATABASE_URI: ${{ secrets.SQLALCHEMY_DATABASE_URI }}
  REDIS_URL: ${{ secrets.REDIS_URL }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  container-job:
    runs-on: ubuntu-latest

    container: python:3.9

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }} 
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5  

    steps:
    - name: Use Node.js 
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - name: Install dependencies
      working-directory: /frontend
      run: npm install
    - run: npm run build --if-present

    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    - name: Install Heroku Cli
      run: curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
    - name: heroku deployment
      uses: akhileshns/heroku-deploy@v3.12.12 
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: ${{secrets.HEROKU_APP_NAME}} 
        heroku_email: ${{secrets.HEROKU_EMAIL}}
        buildpack: "https://github.com/heroku/heroku-buildpack-python.git"